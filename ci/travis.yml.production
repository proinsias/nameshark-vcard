sudo: false  # Use container-based infrastructure

# safelist
branches:
  only:
  - production
  - develop

language: generic

matrix:
  include:
    - os: linux
      env: PYTHON='2.7.12'  # pyenv requres a full version specifier
    - os: linux
      env: PYTHON='3.4.5'
    - os: linux
      env: PYTHON='3.5.2'
    - os: linux
      env: PYTHON='3.5-dev'  # 3.5 development branch
    - os: linux
      env: PYTHON='3.6-dev'  # 3.6 development branch
    - os: linux
      env: PYTHON='pypy-5.4.1'
    - os: linux
      env: PYTHON='pypy2-5.4.1'
# Wait until pypy3-3
#    - os: linux
#      env: PYTHON='pypy3-2.4.0'
    - os: linux
      env: PYTHON='miniconda2-latest'
    - os: linux
      env: PYTHON='miniconda3-latest'
    - os: osx
      env: PYTHON='2.7.12'
    - os: osx
      env: PYTHON='3.4.5'
    - os: osx
      env: PYTHON='3.5.2'
    - os: osx
      env: PYTHON='3.5-dev'
    - os: osx
      env: PYTHON='3.6-dev'
    - os: osx
      env: PYTHON='pypy-5.4.1'
    - os: osx
      env: PYTHON='pypy2-5.4.1'
# Wait until pypy3-3
#    - os: osx
#      env: PYTHON='pypy3-2.4.0'
    - os: osx
      env: PYTHON='miniconda2-latest'
    - os: osx
      env: PYTHON='miniconda3-latest'
  allow_failures:
    - os: linux
      env: PYTHON='3.5-dev'
    - os: linux
      env: PYTHON='3.6-dev'
    - os: linux
      env: PYTHON='pypy-5.4.1'
    - os: linux
      env: PYTHON='pypy2-5.4.1'
#    - os: linux
#      env: PYTHON='pypy3-2.4.0'
    - os: linux
      env: PYTHON='miniconda2-latest'
    - os: linux
      env: PYTHON='miniconda3-latest'
    - os: osx
      env: PYTHON='3.5-dev'
    - os: osx
      env: PYTHON='3.6-dev'
    - os: osx
      env: PYTHON='pypy-5.4.1'
    - os: osx
      env: PYTHON='pypy2-5.4.1'
#    - os: osx
#      env: PYTHON='pypy3-2.4.0'
    - os: osx
      env: PYTHON='miniconda2-latest'
    - os: osx
      env: PYTHON='miniconda3-latest'

before_install:
 - echo "before_install"
 - echo $VIRTUAL_ENV
 - df -h
 - date
 - pwd
 - uname -a
 - git --version
 - git tag
# Install pyenv
 - export PYENV_VERSION=$PYTHON
 - export PATH="/home/travis/.pyenv/bin:/Users/travis/.pyenv/shims:${PATH}"
 - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
 - eval "$(pyenv init -)"
 - eval "$(pyenv virtualenv-init -)"
 - pyenv install $PYTHON
 - pyenv virtualenv venv
 - source activate venv
 - python --version
 - python -m pip install -U pip

install:
 - echo "install start"
 - python -m pip install -r requirements.txt
#  - python setup.py install
#  - python setup.py develop
#  - make all

script:
 - echo "script"
 - python -m pytest  # Use pyenv python to launch pytest

after_success:
 - bash <(curl -s https://codecov.io/bash)
#- coveralls

notifications:
 email:
   recipients:
   - francis.odonovan@gmail.com
 slack:
   secure: PDtcvz//in9jj9g96rjAePhb59NizHGxrPZpmVXvYLNuYh2iN4i9GgBruLoySS5pg4cALgs69quof9c6lF8U75w0FfcOxfANb+6Y5Joh/uvR7IhPe9rZjadsXG4kNlSwfTcxMOc9mTHmyKi50WcnwWGVjPAU8uKnlUPxV3K3kjeuKD6QDOJuCtKgTKyeW92VvtMAKILBD+UOrkdr72eCwtQ+cReQ2JNgYndRgjcs6TxDRAq2OISrHSyX7/ISfqvHcOCnH8jazSFYbYcTZ7Sk9CnDGt+FDz+e8hNysI5T8sFGge6eiwyJQ7ivqdvbWYKS0AFeJA8BQwbrA7gt6jLaM5v5WLY7npVMAhkwtM2s6/Z2p1IsEqhaigoLINfyBw6MCbIDeZg1OJdocuWRNE+pfZgVXzC2XXcnbg+u5ChaqgqoKqN3/Y+W0IGZ4AXXWcT1XHVgB414j4TZ+t/bIlKMbcdD4n9tvmV9+zm+bZ8keFkWlMSac4bW7wX9gOQG4FMUGolznTinwlAwpCpjP22gM7M6BoDwg2URWE5qcXoJYERHdsvaOAOTlj3RnnBjsVZwbIfk2gbWmE0aKwk8l21PBhjiBsZvHPyBR6EeAUi8bktQUfdAImk53h0GYPeSJ6ocu8fas8NgBuZf5Ysc0RxQYnQUkqZZBO53BOScDr87tHE=
